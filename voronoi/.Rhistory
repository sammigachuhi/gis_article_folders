library(ggvoronoi)
library(ggmap)
library(sp)
library(dplyr)
california <- map_data("state") %>%
filter(region == "california")
ncdc.cali <- ncdc_locations %>%
filter(state=="CA")
cali_map <-
ggplot(data = ncdc.cali, aes(x = long, y = lat)) +
scale_fill_gradientn("Elevation",
colors = c("seagreen","darkgreen","green1","yellow","gold4", "sienna"),
values = scales::rescale(c(-60,0,1000,2000,3000,4000))) +
scale_color_gradientn("Elevation",
colours = c("seagreen","darkgreen","green1","yellow","gold4", "sienna"),
values = scales::rescale(c(-60,0,1000,2000,3000,4000))) +
coord_quickmap() +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank())
cali_map +
geom_point(aes(color = elev), size = .01) +
geom_path(data = california, aes(long, lat, group = group), color = "black")
cali_map +
geom_voronoi(aes(fill=elev), outline = california)
california <- map_data("state") %>%
filter(region == "california")
ncdc.cali <- ncdc_locations %>%
filter(state == 'CA')
cali.voronoi <- voronoi_polygon(data = ncdc.cali,
x = "long", y = "lat",
outline = california)
cali.voronoi <- fortify_voronoi(cali.voronoi)
ggplot(cali.voronoi) +
geom_polygon(aes(x = long.x, y = lat.x, fill = elev,
group = group, color = elev), size = 0) +
scale_fill_gradientn("Elevation",
colors = c("seagreen","darkgreen","green1","yellow","gold4", "sienna"),
values = scales::rescale(c(-60,0,1000,2000,3000,4000))) +
scale_color_gradientn("Elevation",
colours = c("seagreen","darkgreen","green1","yellow","gold4", "sienna"),
values = scales::rescale(c(-60,0,1000,2000,3000,4000))) +
coord_quickmap() +
theme_minimal() +
theme(axis.text = element_blank(),
axis.title = element_blank())
# Load the usual geospatial packages
library(sp)
library(sf)
library(rgdal)
library(rgeos)
library(raster)
kenya_srtm <- raster(x = "E:/downloads/Dukto/kesrtm/ke_srtm/ke_srtm/hdr.adf")
# Checkout the raster
plot(kenya_srtm)
lin <- rasterToContour(is.na(kenya_srtm))
pol <- as(st_union(st_polygonize(st_as_sf(lin))), 'Spatial')
pts <- spsample(pol[1, ], 200, type = "random")
head(pts)
head(pts@coords)
head(pts@data)
pts2 <- data.frame(pts@coords, pts@data)
pts2 <- data.frame(pts@coords)
head(pts2)
# Convert dataframe to spatial points dataframe
## Get long and lat from data.frame object
xy <- pts2[, c(1, 2)]
pts_spdf <- SpatialPointsDataFrame(xy,
data = pts2,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
plot(pts_spdf)
install.packages("mapview")
library(mapview)
mapview(pts_spdf)
kenya_admin <- readOGR("E:/downloads/Dukto/counties_shapefile/kenya_counties/ken_admbnda_adm0_iebc_20191031.shp")
pts <- spsample(kenya_admin, 200, type = "random")
head(pts@coords)
head(pts@data)
pts2 <- data.frame(pts@coords)
head(pts2)
# Convert dataframe to spatial points dataframe
## Get long and lat from data.frame object
xy <- pts2[, c(1, 2)]
pts_spdf <- SpatialPointsDataFrame(xy,
data = pts2,
proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
plot(pts_spdf)
install.packages("mapview")
install.packages("mapview")
library(mapview)
mapview(pts_spdf)
